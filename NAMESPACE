# Generated by roxygen2: do not edit by hand

S3method(actions,Board)
S3method(actions,MultiBoard)
S3method(actions,NQueens)
S3method(checkValidState,Board)
S3method(checkValidState,MultiBoard)
S3method(costState,Board)
S3method(costState,MultiBoard)
S3method(costState,NQueens)
S3method(finalState,Board)
S3method(finalState,MultiBoard)
S3method(finalState,NQueens)
S3method(heuristic,Board)
S3method(heuristic,MultiBoard)
S3method(initialState,Board)
S3method(initialState,MultiBoard)
S3method(initialState,NQueens)
S3method(nextState,Board)
S3method(nextState,MultiBoard)
S3method(nextState,NQueens)
S3method(representPath,Board)
S3method(representPath,MultiBoard)
S3method(representPath,NQueens)
S3method(sameState,BoardState)
S3method(sameState,MultiBoardState)
S3method(sameState,NQueensState)
S3method(setCost,Board)
S3method(setCost,MultiBoard)
S3method(setCost,NQueens)
export(actions)
export(astar)
export(bfs)
export(checkValidState)
export(costState)
export(dfs)
export(finalState)
export(generateSudoku)
export(getBoard)
export(getMultiBoard)
export(getNQueens)
export(heuristic)
export(initialState)
export(nextState)
export(path)
export(representPath)
export(sameState)
export(searchList)
export(setCost)
export(writeSudoku)
importFrom(dplyr,`case_when`)
importFrom(magrittr,`%>%`)
importFrom(rlang,.data)
importFrom(utils,write.table)
